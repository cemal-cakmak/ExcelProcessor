@model List<ExcelProcessor.Models.User>
@{
    ViewData["Title"] = "Kullanıcı İşlemleri";
    Layout = "_AdminLayout";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="fas fa-users me-2"></i>Kullanıcı Yönetimi</h5>
                <button class="btn btn-light btn-sm" data-bs-toggle="modal" data-bs-target="#addUserModal">
                    <i class="fas fa-plus me-2"></i>Yeni Kullanıcı
                </button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="usersTable">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Kullanıcı Adı</th>
                                <th>Rol</th>
                                <th>Kayıt Tarihi</th>
                                <th>Son Aktivite</th>
                                <th>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>@user.Id</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-sm me-3">
                                                <i class="fas @(user.IsAdmin ? "fa-user-shield text-danger" : "fa-user text-primary") fa-2x"></i>
                                            </div>
                                            <div>
                                                <strong>@user.Username</strong>
                                                @if (user.IsAdmin)
                                                {
                                                    <br><small class="text-muted">Sistem Yöneticisi</small>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (user.IsAdmin)
                                        {
                                            <span class="badge bg-danger"><i class="fas fa-shield-alt me-1"></i>Admin</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-primary"><i class="fas fa-user me-1"></i>Kullanıcı</span>
                                        }
                                    </td>
                                    <td>
                                        <small>@user.CreatedDate.ToString("dd.MM.yyyy")</small><br>
                                        <small class="text-muted">@user.CreatedDate.ToString("HH:mm")</small>
                                    </td>
                                    <td>
                                        <span class="badge bg-success">Aktif</span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-outline-primary btn-sm edit-user-btn" 
                                                    title="Düzenle" data-user-id="@user.Id">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-outline-info btn-sm view-user-btn" 
                                                    title="Detaylar" data-user-id="@user.Id">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            @if (user.Id != 1) // Ana admin hesabını silmeyi engelle
                                            {
                                                <button class="btn btn-outline-danger btn-sm delete-user-btn" 
                                                        title="Sil" data-user-id="@user.Id" data-username="@user.Username">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Kullanıcı Ekleme Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title"><i class="fas fa-user-plus me-2"></i>Yeni Kullanıcı Ekle</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <div class="mb-3">
                        <label for="addUsername" class="form-label">Kullanıcı Adı *</label>
                        <input type="text" class="form-control" id="addUsername" name="username" required>
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="mb-3">
                        <label for="addPassword" class="form-label">Şifre *</label>
                        <input type="password" class="form-control" id="addPassword" name="password" required minlength="6">
                        <div class="invalid-feedback"></div>
                        <small class="form-text text-muted">En az 6 karakter olmalı</small>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="addIsAdmin" name="isAdmin">
                            <label class="form-check-label" for="addIsAdmin">
                                Admin Yetkisi Ver
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">
                    <i class="fas fa-save me-2"></i>Kullanıcı Ekle
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Kullanıcı Düzenleme Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title"><i class="fas fa-user-edit me-2"></i>Kullanıcı Düzenle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="editUserId">
                    <div class="mb-3">
                        <label for="editUsername" class="form-label">Kullanıcı Adı *</label>
                        <input type="text" class="form-control" id="editUsername" name="username" required>
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="mb-3">
                        <label for="editPassword" class="form-label">Yeni Şifre</label>
                        <input type="password" class="form-control" id="editPassword" name="password" minlength="6">
                        <div class="invalid-feedback"></div>
                        <small class="form-text text-muted">Şifre değiştirmek istemiyorsanız boş bırakın</small>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="editIsAdmin" name="isAdmin">
                            <label class="form-check-label" for="editIsAdmin">
                                Admin Yetkisi Ver
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-warning" id="updateUserBtn">
                    <i class="fas fa-save me-2"></i>Güncelle
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Kullanıcı Detay Modal -->
<div class="modal fade" id="viewUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title"><i class="fas fa-user me-2"></i>Kullanıcı Detayları</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-4"><strong>ID:</strong></div>
                    <div class="col-sm-8" id="viewUserId">-</div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-4"><strong>Kullanıcı Adı:</strong></div>
                    <div class="col-sm-8" id="viewUsername">-</div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-4"><strong>Rol:</strong></div>
                    <div class="col-sm-8" id="viewUserRole">-</div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-4"><strong>Kayıt Tarihi:</strong></div>
                    <div class="col-sm-8" id="viewCreatedDate">-</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            const table = $('#usersTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/tr.json'
                },
                pageLength: 10,
                order: [[0, 'asc']],
                columnDefs: [
                    { orderable: false, targets: [5] }
                ]
            });

            // Kullanıcı Ekleme
            $('#saveUserBtn').on('click', function() {
                const form = $('#addUserForm')[0];
                if (!form.checkValidity()) {
                    form.reportValidity();
                    return;
                }

                const userData = {
                    username: $('#addUsername').val(),
                    password: $('#addPassword').val(),
                    isAdmin: $('#addIsAdmin').is(':checked')
                };

                $(this).prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i>Kaydediliyor...');

                $.ajax({
                    url: '@Url.Action("AddUser", "Admin")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(userData),
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', response.message);
                            $('#addUserModal').modal('hide');
                            location.reload(); // Sayfayı yenile
                        } else {
                            showAlert('danger', response.message);
                        }
                    },
                    error: function() {
                        showAlert('danger', 'Bir hata oluştu!');
                    },
                    complete: function() {
                        $('#saveUserBtn').prop('disabled', false).html('<i class="fas fa-save me-2"></i>Kullanıcı Ekle');
                    }
                });
            });

            // Kullanıcı Düzenleme
            $('.edit-user-btn').on('click', function() {
                const userId = $(this).data('user-id');
                
                $.ajax({
                    url: '@Url.Action("GetUser", "Admin")',
                    type: 'GET',
                    data: { id: userId },
                    success: function(response) {
                        if (response.success) {
                            $('#editUserId').val(response.user.id);
                            $('#editUsername').val(response.user.username);
                            $('#editPassword').val('');
                            $('#editIsAdmin').prop('checked', response.user.isAdmin);
                            $('#editUserModal').modal('show');
                        } else {
                            showAlert('danger', response.message);
                        }
                    },
                    error: function() {
                        showAlert('danger', 'Kullanıcı bilgileri alınamadı!');
                    }
                });
            });

            // Kullanıcı Güncelleme
            $('#updateUserBtn').on('click', function() {
                const form = $('#editUserForm')[0];
                if (!form.checkValidity()) {
                    form.reportValidity();
                    return;
                }

                const userData = {
                    id: parseInt($('#editUserId').val()),
                    username: $('#editUsername').val(),
                    password: $('#editPassword').val(),
                    isAdmin: $('#editIsAdmin').is(':checked')
                };

                $(this).prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i>Güncelleniyor...');

                $.ajax({
                    url: '@Url.Action("UpdateUser", "Admin")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(userData),
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', response.message);
                            $('#editUserModal').modal('hide');
                            location.reload();
                        } else {
                            showAlert('danger', response.message);
                        }
                    },
                    error: function() {
                        showAlert('danger', 'Bir hata oluştu!');
                    },
                    complete: function() {
                        $('#updateUserBtn').prop('disabled', false).html('<i class="fas fa-save me-2"></i>Güncelle');
                    }
                });
            });

            // Kullanıcı Detayları
            $('.view-user-btn').on('click', function() {
                const userId = $(this).data('user-id');
                
                $.ajax({
                    url: '@Url.Action("GetUser", "Admin")',
                    type: 'GET',
                    data: { id: userId },
                    success: function(response) {
                        if (response.success) {
                            $('#viewUserId').text(response.user.id);
                            $('#viewUsername').text(response.user.username);
                            $('#viewUserRole').html(response.user.isAdmin ? 
                                '<span class="badge bg-danger">Admin</span>' : 
                                '<span class="badge bg-primary">Kullanıcı</span>');
                            $('#viewCreatedDate').text(response.user.createdDate);
                            $('#viewUserModal').modal('show');
                        } else {
                            showAlert('danger', response.message);
                        }
                    },
                    error: function() {
                        showAlert('danger', 'Kullanıcı bilgileri alınamadı!');
                    }
                });
            });

            // Kullanıcı Silme
            $('.delete-user-btn').on('click', function() {
                const userId = $(this).data('user-id');
                const username = $(this).data('username');
                
                if (confirm(`"${username}" kullanıcısını silmek istediğinize emin misiniz?`)) {
                    $.ajax({
                        url: '@Url.Action("DeleteUser", "Admin")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ id: userId }),
                        success: function(response) {
                            if (response.success) {
                                showAlert('success', response.message);
                                location.reload();
                            } else {
                                showAlert('danger', response.message);
                            }
                        },
                        error: function() {
                            showAlert('danger', 'Bir hata oluştu!');
                        }
                    });
                }
            });

            // Modal temizleme
            $('#addUserModal').on('hidden.bs.modal', function() {
                $('#addUserForm')[0].reset();
                $('.form-control').removeClass('is-invalid');
            });

            $('#editUserModal').on('hidden.bs.modal', function() {
                $('#editUserForm')[0].reset();
                $('.form-control').removeClass('is-invalid');
            });

            // Alert gösterme fonksiyonu
            function showAlert(type, message) {
                const alertHtml = `
                    <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'} me-2"></i>
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `;
                
                $('.card').first().prepend(alertHtml);
                
                // 5 saniye sonra otomatik kapat
                setTimeout(function() {
                    $('.alert').fadeOut();
                }, 5000);
            }
        });
    </script>
}
